AWSTemplateFormatVersion: 2010-09-09
Description: This template deploys four instances in four subnets. 
  Two of the subnets are public and the others ar private subnets. It deploys also an Bastion host a long  with Security groups.
 
Parameters: 
  VpcStackName:
    Description: Please enter the source satck name
    Type: String
    Default: VPC-005-stack
  KeyPair:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance 
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType:
    Description: Select Ec2 Instance Type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m1.small
      - m1.medium
      - m1.large
      - m1.xlarge
      - m2.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - c1.medium
      - c1.xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - g2.2xlarge
      - g2.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - hi1.4xlarge
      - hs1.8xlarge
      - cr1.8xlarge
      - cc2.8xlarge
      - cg1.4xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  AllowedSSHIP:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

Resources: 
  BastionInstance:
    Type: AWS::EC2::Instance
    Properties:
      SubnetId: 
        Fn::ImportValue: !Sub "${VpcStackName}-PublicSubnet-A-ID:SubnetId"
      KeyName: !Ref KeyPair
      ImageId: ami-00dc79254d0461090
      InstanceType: !Ref InstanceType
      SecurityGroupIds:
        - !Ref BastionSecurityGroup
      Tags:
        - Key: Name
          Value: BastionHost
  PublicInstanceA:
    Type: AWS::EC2::Instance
    Properties:
      SubnetId: 
        Fn::ImportValue: !Sub "${VpcStackName}-PublicSubnet-A-ID:SubnetId"
      KeyName: !Ref KeyPair
      ImageId: ami-00dc79254d0461090
      InstanceType: !Ref InstanceType
      SecurityGroupIds:
        - !Ref PublicSecurityGroup
      Tags:
        - Key: Name
          Value: PublicInstance-A
      UserData: !Base64 |
        #!/bin/bash
        yum update -y
        yum install httpd -y
        service httpd start
        chkconfig httpd on
        cd /var/www/html
        echo "<html><h1> Hello From PublicInstance-A</h1></html>" > index.html
  PublicInstanceB:
    Type: AWS::EC2::Instance
    Properties:
      SubnetId: 
        Fn::ImportValue: !Sub "${VpcStackName}-PublicSubnet-B-ID:SubnetId"
      KeyName: !Ref KeyPair
      ImageId: ami-00dc79254d0461090
      InstanceType: !Ref InstanceType
      SecurityGroupIds:
        - !Ref PublicSecurityGroup
      Tags:
        - Key: Name
          Value: PublicInstance-B
      UserData: !Base64 |
        #!/bin/bash
        yum update -y
        yum install httpd -y
        service httpd start
        chkconfig httpd on
        cd /var/www/html
        echo "<html><h1> Hello From PublicInstance-B</h1></html>" > index.html
  PrivateInstanceA:
    Type: AWS::EC2::Instance
    Properties:
      SubnetId: 
        Fn::ImportValue: !Sub "${VpcStackName}-PrivateSubnet-A-ID:SubnetId"
      KeyName: !Ref KeyPair
      ImageId: ami-00dc79254d0461090
      InstanceType: !Ref InstanceType
      SecurityGroupIds:
        - !Ref PrivateSecurityGroup
      Tags:
        - Key: Name
          Value: PrivateInstance-A
      UserData: !Base64 |
        #!/bin/bash
        yum update -y
        yum install httpd -y
        service httpd start
        chkconfig httpd on
        cd /var/www/html
        echo "<html><h1> Hello From PrivateInstance-A</h1></html>" > index.html
  PrivateInstanceB:
    Type: AWS::EC2::Instance
    Properties:
      SubnetId: 
        Fn::ImportValue: !Sub "${VpcStackName}-PrivateSubnet-B-ID:SubnetId"
      KeyName: !Ref KeyPair
      ImageId: ami-00dc79254d0461090
      InstanceType: !Ref InstanceType
      SecurityGroupIds:
        - !Ref PrivateSecurityGroup
      Tags:
        - Key: Name
          Value: PrivateInstance-B
      UserData: !Base64 |
        #!/bin/bash
        yum update -y
        yum install httpd -y
        service httpd start
        chkconfig httpd on
        cd /var/www/html
        echo "<html><h1> Hello From PrivateInstance-B</h1></html>" > index.html
  # Security Groups
  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription:  Enable SSH and Httb access
      VpcId:
        Fn::ImportValue: !Sub ${VpcStackName}-VPCID
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref AllowedSSHIP
      Tags:
        - Key: Name
          Value: BastionSG
  PublicSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription:  Enable SSH and Httb access
      VpcId: 
        Fn::ImportValue: !Sub ${VpcStackName}-VPCID
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 
          Fn::ImportValue: !Sub ${VpcStackName}-Vpc-CIDR:CidrBlock
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: PublicSG
  PrivateSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription:  Enable SSH and Httb access
      VpcId: 
        Fn::ImportValue: !Sub ${VpcStackName}-VPCID
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 
          Fn::ImportValue: !Sub ${VpcStackName}-Vpc-CIDR:CidrBlock
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp:
          Fn::ImportValue: !Sub ${VpcStackName}-Vpc-CIDR:CidrBlock
      Tags:
        - Key: Name
          Value: PrivateSG

Outputs:
  BastionInstanceIP:
    Description: IP Bastion instance
    Value: !GetAtt BastionInstance.PublicIp 
  PublicInstanceAIp:
    Description: Public Instance A IP
    Value: !GetAtt PublicInstanceA.PublicIp 
  PublicInstanceBIp:
    Description: Public Instance B IP
    Value: !GetAtt PublicInstanceB.PublicIp